---
title: "Tidy Tuesday R"
author: "ACO"
editor: visual
date: "`r Sys.Date()`"
output:
  pdf_document:
    toc: yes
    toc_depth: '6'
  html_document:
    df_print: paged
    toc: yes
    toc_depth: '3'
  html_notebook:
    fig_caption: no
    toc: yes
    toc_depth: 3
    toc_float: yes
  word_document:
    toc: yes
    toc_depth: '3'
urlcolor: blue
subtitle: "Year 2025, Week = 2 (2025-01-14)"
---

```{r, include=FALSE}
knitr::opts_chunk$set( echo = T, warning=FALSE, message=FALSE, attr.source='.numberLines', attr.output='.numberLines', fig.align='center', dpi=700, fig.width=20, fig.height=10)
```

# TidyTuesday

## posit::conf talks

"`posit::conf` is an annual conference that focuses on the R and Python programming languages and their applications in data science. The conference features a variety of workshops, talks, and networking opportunities for attendees, with a particular emphasis on fostering a sense of community among data science professionals." \~ TidyTuesday

I am more interested in the distribution of sessional abstracts' count of words and character, and which speakers and their titles had the most and least of both.

## The Data

``` r
# Option 1: tidytuesdayR package 
## install.packages("tidytuesdayR")

tuesdata <- tidytuesdayR::tt_load('2025-01-14')
## OR
tuesdata <- tidytuesdayR::tt_load(2025, week = 2)

conf2023 <- tuesdata$conf2023
conf2024 <- tuesdata$conf2024

# Option 2: Read directly from GitHub

conf2023 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-14/conf2023.csv')
conf2024 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-14/conf2024.csv')
```

### Data Dictionary

#### `conf2023.csv`

| variable | class | description |
|:-----------------|:---------------------|:-------------------------------|
| speaker_name | character | The name of the speaker. The data is indexed by this field, so other fields may contain duplicate data. |
| speaker_affiliation | character | The company or organization with which the speaker is affiliated. |
| session_type | character | Whether the session is a "keynote" a "regular" talk, or a "lightning" talk. |
| session_title | character | The title of the talk. |
| block_track_title | character | The title of the block in which the talk was presented. A block is a set of talks on a related area. |
| session_date | date | The date on which this talk was given (either 2023-09-19 or 2023-09-20). |
| session_start | datetime | The start time of the talk in the America/Chicago (US CDT) timezone. |
| session_length | integer | The duration of the talk in minutes. |
| session_abstract | character | A brief description of the talk. |

#### `conf2024.csv`

| variable | class | description |
|:---------------|:---------------|:----------------------------------------|
| talk_title | character | The title of the talk. |
| speaker_name | character | The name of the speaker. The data is indexed by this field, so other fields may contain duplicate data. |
| track | character | The title of the block in which the talk was presented. A block is a set of talks on a related area. |
| description | character | A brief description of the talk. |
| yt_url | character | The URL of the YouTube video of the talk. |

### EDA

```{r}
library(tidyverse)
library(ggrepel)
library(ggthemes)
library(tidytuesdayR)
```

#### Get data

```{r}
tuesdata <- tidytuesdayR::tt_load(2025, week = 2)
conf2023 <- tuesdata$conf2023
conf2024 <- tuesdata$conf2024
```

#### Some Manipulation to get counts of words and chars

```{r}
sa2023 = conf2023 |>
  select(session_abstract, speaker_name, session_title) |> 
  mutate(
    talk_title = session_title,
    chars = nchar(session_abstract),
    words = str_count(session_abstract, "\\W+"),
    year = 2023
  ) |> select(-session_abstract, -session_title)
ds2024 = conf2024 |> 
  select(description, speaker_name, talk_title)|> 
  mutate(
    chars = nchar(description),
    words = str_count(description, "\\W+"),
    year = 2024) |>
  select(-description)
```

```{r}
all_data = bind_rows(
  sa2023, ds2024
) |>
  mutate(
    speaker_name = str_replace_all(speaker_name, c(", " = "\n", "and " = "")),
    talk_title = talk_title |> str_wrap(width = 40)# wrap for longer talk titles
  ) |>
  mutate(
    labels = ifelse(
      chars > 800 | chars < 350, 
      paste(
        speaker_name, paste0("(", talk_title, ")"),
        sep = "\n"), "")
  )
```

#### Data Overview

```{r}
head(all_data)
```


#### Visualization

```{r}
char_words_plot = all_data |>
  drop_na() |>
  ggplot() +
  geom_point(aes(x = chars, y = words, color = as.factor(year))) +
  geom_text_repel(
    aes(x = chars, y = words,label = labels,color = as.factor(year)),
    box.padding = 1, max.overlaps = Inf, 
    nudge_y = 1, segment.inflect = T, #min.segment.length = 0,
    segment.curvature = -0.1, segment.linetype = 6, 
    nudge_x = .15, arrow = arrow(length = unit(0.015, "npc")),
    xlim = c(200, 2500), ylim = c(50, 300)
  ) +
  labs(
    title = "Posit Conferences 2023-2024: Session Abstracts",
    subtitle = "Counts of the brief description of the talks: Words ~ Character",
    x = "Characters", y = "Words", 
    caption = c("tidytuesdayR::tt_load(2025, week = 2)", "https://github.com/akhapwoyaco/")
  ) +
  scale_color_brewer(palette = "Dark2") +
  theme_excel_new() +
  theme(
    axis.text = element_text(face = 'bold'),
    axis.title = element_text(face = 'bold'),
    plot.title = element_text(face = 'bold', hjust = 0.5),
    plot.subtitle = element_text(face = 'bold', hjust = 0.5),
    legend.position = 'inside',
    legend.position.inside = c(0.3, 0.9),
    legend.background = element_blank(),
    legend.direction = 'horizontal',
    plot.caption = element_text(hjust = c(1,0))
  )
```


```{r}
char_words_plot
```

#### Save Plot

```{r}
ggsave(
  filename = "char_words_plot.jpeg", plot = char_words_plot, 
  width = 35, height = 25, units = "cm", dpi = 750
)
#

```
